package com.example.shopstyle.services.validation;

import java.util.ArrayList;
import java.util.List;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.springframework.beans.factory.annotation.Autowired;

import com.example.shopstyle.controllers.exceptions.FieldMessage;
import com.example.shopstyle.dto.UserFormDTO;
import com.example.shopstyle.entities.User;
import com.example.shopstyle.repositories.UserRepository;
import com.example.shopstyle.services.validation.utils.BR;

public class UserInsertValidator implements ConstraintValidator<UserInsert, User> {

	@Autowired
	private UserRepository userRepository;

	@Override
	public void initialize(UserInsert ann) {
	}

	@Override
	public boolean isValid(UserFormDTO value, ConstraintValidatorContext context) {
		List<FieldMessage> list = new ArrayList<>();

		if(!BR.isValidCPF(obj.getCpf())) {
			list.add(new FieldMessage("cpf", "CPF inv√°lido"));
		}
		
		
		
		User aux = userRepository.findByEmail(obj.getEmail());
		if(aux != null) {
			list.add(new FieldMessage("email", "Email already exist"));
		}

		for (FieldMessage e : list) {
			context.disableDefaultConstraintViolation();
			context.buildConstraintViolationWithTemplate(e.getMessage()).addPropertyNode(e.getFieldName())
					.addConstraintViolation();
		}
		return list.isEmpty();
	}

	
			

}
